// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.Models;

#nullable disable

namespace back_end.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241213120308_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("back_end.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Puma"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Louis Vuitton"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Convert"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Canvas"
                        });
                });

            modelBuilder.Entity("back_end.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Xanh Navy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Trắng Kem"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Xanh Rêu"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cam"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Đen"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Hồng"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Nâu"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Xanh Dương"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Kem"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Hồng Kem"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Xanh Lá Cây"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Xanh Dương"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Xám"
                        });
                });

            modelBuilder.Entity("back_end.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("back_end.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("QuantityOrder")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId")
                        .IsUnique();

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId")
                        .IsUnique();

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("back_end.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ColorId")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ImagesProduct")
                        .HasColumnType("longtext");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfProductInStock")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfProductSold")
                        .HasColumnType("int");

                    b.Property<double>("PriceProduct")
                        .HasColumnType("double");

                    b.Property<string>("SizeId")
                        .HasColumnType("longtext");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            CategoryId = 1,
                            ColorId = "5,8,9,10",
                            CreatedDate = new DateTime(2024, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagesProduct = "[\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860256/gdw7lxyps83b8lb4e0dz.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860258/r8zcqx920jtawfm9xdap.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860259/jgjf7f9q5frtfogz2pap.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860260/vw8c53g4pm8z5kfv6huc.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860262/siexn3ygexvctydme2s6.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860263/up71kjl9srrx5nhxp9g8.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860265/y5wghhvrlc51qtpfgovm.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731860266/plkiqeg9qxzek1map7ei.jpg\"]",
                            NameProduct = "Adidas Ultra Boost",
                            NumberOfProductInStock = 13,
                            NumberOfProductSold = 1,
                            PriceProduct = 7000000.0,
                            SizeId = "3,4,5,6,7,8",
                            StockQuantity = 14
                        },
                        new
                        {
                            Id = new Guid("07401f68-4576-4079-adc4-dd650f677fd3"),
                            CategoryId = 2,
                            ColorId = "12",
                            CreatedDate = new DateTime(2024, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagesProduct = "[\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731433880/ugcuzwogxefgvn3cmaxv.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731433882/qea967cokcdtzqjkivux.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731433884/czcq9j9k1fhr810qa5ij.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731433885/ti9mfqkp8rtboqjxhmmp.jpg\"]",
                            NameProduct = "Nike Air",
                            NumberOfProductInStock = 12,
                            NumberOfProductSold = 0,
                            PriceProduct = 1400000.0,
                            SizeId = "4,5,6,7",
                            StockQuantity = 12
                        },
                        new
                        {
                            Id = new Guid("0b7eeadd-9b05-4083-a1d9-ab92f3df285c"),
                            CategoryId = 1,
                            ColorId = "6,10",
                            CreatedDate = new DateTime(2024, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagesProduct = "[\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731859640/rhkr5efguhfbjvy00qhl.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731859644/bdkk7vxzqyotxk7fedam.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731859647/mmomwunxbz1ocymymwsa.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731859651/vpc7tzzamfpedd44kjfx.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731859656/y4qzzm6krkescndmmedh.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731859661/bvll2vngzgghefdfhetv.jpg\"]",
                            NameProduct = "Adidas Gazelle",
                            NumberOfProductInStock = 1,
                            NumberOfProductSold = 11,
                            PriceProduct = 2000000.0,
                            SizeId = "2,3,4,5",
                            StockQuantity = 12
                        },
                        new
                        {
                            Id = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            CategoryId = 1,
                            ColorId = "1,10",
                            CreatedDate = new DateTime(2024, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagesProduct = "[\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731471164/rqlsoym0u01xndkw2khx.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731471173/mfvli39fscfnbvrrln9u.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731471174/zymzqi1prwvcyrkq8xdr.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731471175/xc2qo01mwm2qvbbsnm9t.jpg\"]",
                            NameProduct = "ADIDAS CAMPUS",
                            NumberOfProductInStock = 4,
                            NumberOfProductSold = 0,
                            PriceProduct = 850000.0,
                            SizeId = "1,2,3,4,5",
                            StockQuantity = 4
                        },
                        new
                        {
                            Id = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            CategoryId = 1,
                            ColorId = "3,6,8",
                            CreatedDate = new DateTime(2024, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImagesProduct = "[\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731432334/d7i7cnsq7mv1gdrjmugr.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731432335/eeons2zvfiybtlyz33im.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731432337/jqxmjxl4zwcgnde4qn3m.jpg\",\"https://res.cloudinary.com/dsxrhkdnh/image/upload/v1731432338/y54prw6hqexa44mkszmd.jpg\"]",
                            NameProduct = "Adidas Campus",
                            NumberOfProductInStock = 5,
                            NumberOfProductSold = 0,
                            PriceProduct = 500000.0,
                            SizeId = "2,3,5,6,7",
                            StockQuantity = 5
                        });
                });

            modelBuilder.Entity("back_end.Models.ProductColor", b =>
                {
                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ColorId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductColors");

                    b.HasData(
                        new
                        {
                            ColorId = 5,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 1
                        },
                        new
                        {
                            ColorId = 8,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 2
                        },
                        new
                        {
                            ColorId = 9,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 3
                        },
                        new
                        {
                            ColorId = 10,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 4
                        },
                        new
                        {
                            ColorId = 12,
                            ProductId = new Guid("07401f68-4576-4079-adc4-dd650f677fd3"),
                            Id = 5
                        },
                        new
                        {
                            ColorId = 6,
                            ProductId = new Guid("0b7eeadd-9b05-4083-a1d9-ab92f3df285c"),
                            Id = 6
                        },
                        new
                        {
                            ColorId = 10,
                            ProductId = new Guid("0b7eeadd-9b05-4083-a1d9-ab92f3df285c"),
                            Id = 7
                        },
                        new
                        {
                            ColorId = 1,
                            ProductId = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            Id = 8
                        },
                        new
                        {
                            ColorId = 10,
                            ProductId = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            Id = 9
                        },
                        new
                        {
                            ColorId = 3,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 10
                        },
                        new
                        {
                            ColorId = 6,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 11
                        },
                        new
                        {
                            ColorId = 8,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 12
                        });
                });

            modelBuilder.Entity("back_end.Models.ProductSize", b =>
                {
                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("SizeId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSizes");

                    b.HasData(
                        new
                        {
                            SizeId = 3,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 1
                        },
                        new
                        {
                            SizeId = 4,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 2
                        },
                        new
                        {
                            SizeId = 5,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 3
                        },
                        new
                        {
                            SizeId = 6,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 4
                        },
                        new
                        {
                            SizeId = 7,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 5
                        },
                        new
                        {
                            SizeId = 8,
                            ProductId = new Guid("01087e47-19aa-4ae9-8670-ee69d9223a02"),
                            Id = 6
                        },
                        new
                        {
                            SizeId = 4,
                            ProductId = new Guid("07401f68-4576-4079-adc4-dd650f677fd3"),
                            Id = 7
                        },
                        new
                        {
                            SizeId = 5,
                            ProductId = new Guid("07401f68-4576-4079-adc4-dd650f677fd3"),
                            Id = 8
                        },
                        new
                        {
                            SizeId = 6,
                            ProductId = new Guid("07401f68-4576-4079-adc4-dd650f677fd3"),
                            Id = 9
                        },
                        new
                        {
                            SizeId = 7,
                            ProductId = new Guid("07401f68-4576-4079-adc4-dd650f677fd3"),
                            Id = 10
                        },
                        new
                        {
                            SizeId = 2,
                            ProductId = new Guid("0b7eeadd-9b05-4083-a1d9-ab92f3df285c"),
                            Id = 11
                        },
                        new
                        {
                            SizeId = 3,
                            ProductId = new Guid("0b7eeadd-9b05-4083-a1d9-ab92f3df285c"),
                            Id = 12
                        },
                        new
                        {
                            SizeId = 4,
                            ProductId = new Guid("0b7eeadd-9b05-4083-a1d9-ab92f3df285c"),
                            Id = 13
                        },
                        new
                        {
                            SizeId = 5,
                            ProductId = new Guid("0b7eeadd-9b05-4083-a1d9-ab92f3df285c"),
                            Id = 14
                        },
                        new
                        {
                            SizeId = 1,
                            ProductId = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            Id = 15
                        },
                        new
                        {
                            SizeId = 2,
                            ProductId = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            Id = 16
                        },
                        new
                        {
                            SizeId = 3,
                            ProductId = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            Id = 17
                        },
                        new
                        {
                            SizeId = 4,
                            ProductId = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            Id = 18
                        },
                        new
                        {
                            SizeId = 5,
                            ProductId = new Guid("39978fd8-a449-47b6-b8ed-0e3461a20073"),
                            Id = 19
                        },
                        new
                        {
                            SizeId = 2,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 20
                        },
                        new
                        {
                            SizeId = 3,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 21
                        },
                        new
                        {
                            SizeId = 5,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 22
                        },
                        new
                        {
                            SizeId = 6,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 23
                        },
                        new
                        {
                            SizeId = 7,
                            ProductId = new Guid("52623100-c0e1-460a-9bca-5dfe2592f9cf"),
                            Id = 24
                        });
                });

            modelBuilder.Entity("back_end.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NumberOfSize")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumberOfSize = "36"
                        },
                        new
                        {
                            Id = 2,
                            NumberOfSize = "37"
                        },
                        new
                        {
                            Id = 3,
                            NumberOfSize = "38"
                        },
                        new
                        {
                            Id = 4,
                            NumberOfSize = "39"
                        },
                        new
                        {
                            Id = 5,
                            NumberOfSize = "40"
                        },
                        new
                        {
                            Id = 6,
                            NumberOfSize = "41"
                        },
                        new
                        {
                            Id = 7,
                            NumberOfSize = "42"
                        },
                        new
                        {
                            Id = 8,
                            NumberOfSize = "43"
                        },
                        new
                        {
                            Id = 9,
                            NumberOfSize = "44"
                        },
                        new
                        {
                            Id = 10,
                            NumberOfSize = "45"
                        },
                        new
                        {
                            Id = 11,
                            NumberOfSize = "46"
                        },
                        new
                        {
                            Id = 12,
                            NumberOfSize = "47"
                        },
                        new
                        {
                            Id = 13,
                            NumberOfSize = "48"
                        });
                });

            modelBuilder.Entity("back_end.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0afd73e7-ff97-4496-a3e4-982bed3d13dd"),
                            Email = "admin@minhstore.com",
                            Password = "$2a$11$9jeUlXPVD7r1nCM2OY8kTeTb0gaaqU9JNxvDlLdnAfCsTqshtVjJq",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = new Guid("ff4ea765-a65d-40ab-9a80-e34a9f88641b"),
                            Email = "user123@gmail.com",
                            Password = "$2a$11$FCaTTf3BWwO71.0jEje/Z.J3CWJO/1iYcT9eNWj/qcmEOhR7.SlJO",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("78f30dbe-4dcf-42c9-a218-3d938ca79c8e"),
                            Email = "user456@gmail.com",
                            Password = "$2a$11$O88Jm0AY8nWbPaggG4s4yO4k3p1ksK5KCdk/5KVTShM70NVPeY1Wq",
                            Role = "User"
                        },
                        new
                        {
                            Id = new Guid("c8b55424-7f37-4d0e-8ee6-7ff3ccfabac1"),
                            Email = "user789@gmail.com",
                            Password = "$2a$11$c6SU5E8zS/3ZHPBlTX6OK.hXUJMjd4zDyUf2WhnFY1Z1fnJ8e57Py",
                            Role = "User"
                        });
                });

            modelBuilder.Entity("back_end.Models.Order", b =>
                {
                    b.HasOne("back_end.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("back_end.Models.OrderDetail", b =>
                {
                    b.HasOne("back_end.Models.Color", "Color")
                        .WithOne()
                        .HasForeignKey("back_end.Models.OrderDetail", "ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Models.Size", "Size")
                        .WithOne()
                        .HasForeignKey("back_end.Models.OrderDetail", "SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("back_end.Models.Product", b =>
                {
                    b.HasOne("back_end.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("back_end.Models.ProductColor", b =>
                {
                    b.HasOne("back_end.Models.Color", null)
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("back_end.Models.ProductSize", b =>
                {
                    b.HasOne("back_end.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_end.Models.Size", null)
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("back_end.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("back_end.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("back_end.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("back_end.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
